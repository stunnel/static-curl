name: release-macOS

on:
  # run it manually
  workflow_dispatch:

jobs:
  release-macOS:
    name: release-macOS (${{ github.ref_name }})
    runs-on: macos-latest

    steps:
      - name: Use variables
        env:
          CURL_VERSION: ${{ vars.CURL_VERSION }}
          QUICTLS_VERSION: ${{ vars.QUICTLS_VERSION }}
          NGTCP2_VERSION: ${{ vars.NGTCP2_VERSION }}
          NGHTTP3_VERSION: ${{ vars.NGHTTP3_VERSION }}
          NGHTTP2_VERSION: ${{ vars.NGHTTP2_VERSION }}
          LIBIDN2_VERSION: ${{ vars.LIBIDN2_VERSION }}
          LIBUNISTRING_VERSION: ${{ vars.LIBUNISTRING_VERSION }}
          ZLIB_VERSION: ${{ vars.ZLIB_VERSION }}
          BROTLI_VERSION: ${{ vars.BROTLI_VERSION }}
          ZSTD_VERSION: ${{ vars.ZSTD_VERSION }}
          LIBSSH2_VERSION: ${{ vars.LIBSSH2_VERSION }}
          TEST_ENV: ${{ vars.TEST_ENV }}
          TEST_SECRET: ${{ secrets.TEST_SECRET }}
        run: |
          echo "cURL version: ${CURL_VERSION}"
          echo "QuicTLS version: ${QUICTLS_VERSION}"
          echo "ngtcp2 version: ${NGTCP2_VERSION}"
          echo "nghttp3 version: ${NGHTTP3_VERSION}"
          echo "nghttp2 version: ${NGHTTP2_VERSION}"
          echo "libidn2 version: ${LIBIDN2_VERSION}"
          echo "libunistring version: ${LIBUNISTRING_VERSION}"
          echo "zlib version: ${ZLIB_VERSION}"
          echo "brotli version: ${BROTLI_VERSION}"
          echo "zstd version: ${ZSTD_VERSION}"
          echo "libssh2 version: ${LIBSSH2_VERSION}"
          echo "test env: ${TEST_ENV}"
          echo "test secret: ${TEST_SECRET}"
          echo "Home: ${HOME}"

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Build Static cURL on macOS
        env:
          CURL_VERSION: ${{ vars.CURL_VERSION }}
          QUICTLS_VERSION: ${{ vars.QUICTLS_VERSION }}
          NGTCP2_VERSION: ${{ vars.NGTCP2_VERSION }}
          NGHTTP3_VERSION: ${{ vars.NGHTTP3_VERSION }}
          NGHTTP2_VERSION: ${{ vars.NGHTTP2_VERSION }}
          LIBIDN2_VERSION: ${{ vars.LIBIDN2_VERSION }}
          LIBUNISTRING_VERSION: ${{ vars.LIBUNISTRING_VERSION }}
          ZLIB_VERSION: ${{ vars.ZLIB_VERSION }}
          BROTLI_VERSION: ${{ vars.BROTLI_VERSION }}
          ZSTD_VERSION: ${{ vars.ZSTD_VERSION }}
          LIBSSH2_VERSION: ${{ vars.LIBSSH2_VERSION }}
          TOKEN_READ: ${{ secrets.GITHUB_TOKEN }}
          ARCHS: "x86_64 arm64"
        run: |
          ARCHS="${ARCHS}"
          CURL_VERSION=${CURL_VERSION}
          QUICTLS_VERSION=${QUICTLS_VERSION}
          NGTCP2_VERSION=${NGTCP2_VERSION}
          NGHTTP3_VERSION=${NGHTTP3_VERSION}
          NGHTTP2_VERSION=${NGHTTP2_VERSION}
          LIBIDN2_VERSION=${LIBIDN2_VERSION}
          LIBUNISTRING_VERSION=${LIBUNISTRING_VERSION}
          ZLIB_VERSION=${ZLIB_VERSION}
          BROTLI_VERSION=${BROTLI_VERSION}
          ZSTD_VERSION=${ZSTD_VERSION}
          LIBSSH2_VERSION=${LIBSSH2_VERSION}
          TOKEN_READ=${TOKEN_READ}
          bash curl-static-mac.sh

      - name: Set up environment
        run: |
          ls -l "${HOME}"
          VERSION=`cat "${HOME}/curl_version.txt" 2>/dev/null || cat /tmp/curl_version.txt`
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "RELEASE_HOME=${HOME}" >> $GITHUB_ENV

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        if: github.ref == 'refs/heads/main'
        with:
          files: ${{ env.RELEASE_HOME }}/release/curl-*.tar.xz
          body_path: ${{ env.RELEASE_HOME }}/release/release.md
          tag_name: ${{ env.VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
